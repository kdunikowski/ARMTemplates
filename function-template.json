{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "functionAppName": {
            "type": "string",
            "metadata": {
            "description": "The name of the function app that you wish to create."
            }
        },
        "sku": {
            "type": "string",
            "defaultValue": "Dynamic Y1"
        },
        "storageAccountName": {
            "type": "string"          
        },  
        "hostingPlanName": {
            "type": "string"
        },
        "appInsightLocation": {
            "type": "string"
        },
        "functionEnvironment":{
            "type":"string"
        },
		"functions":{
			"type": "array"
		},
        "databaseConnectionProperties": {
            "type": "array"
        },
        "eventHubConnectionProperties": {
            "type": "array"
        },
        "storageConnectionProperties": {
            "type": "array"
        },
        "serviceBusConnectionProperties": {
            "type": "object"
        },
        "tsiConnectionProperties": {
            "type":"array"
        }
    },
    "variables":{
        "empty": []
    },
    "resources": [
        {
            "apiVersion": "2017-05-10",
            "name": "[concat(parameters('functionAppName'),'storage')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/kdunikowski/ARMTemplates/master/storage-account-template.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
						"value": "[parameters('storageAccountName')]"
                    },
                     "tables":{
                         "value":["Default"]
                     },
                     "blobContainers": {
                        "value": []
                    },
                    "deletePolicyDays": {
                        "value": 0
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat(parameters('functionAppName'),'-properties')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/kdunikowski/ARMTemplates/master/function-app-properties-template.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "functionAppName": {
                        "value":"[parameters('functionAppName')]"
                    },
                    "storageAccountName": {
						"value": "[parameters('storageAccountName')]"
                    },
                    "functionEnvironment": {
                        "value":"[parameters('functionEnvironment')]"
                    }
                }
            },
            "dependsOn": ["[concat(parameters('functionAppName'),'storage')]"]
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat(parameters('functionAppName'),'-database-connection-properties')]",
            "type": "Microsoft.Resources/deployments",
            "condition": "[not(empty(parameters('databaseConnectionProperties')))]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/kdunikowski/ARMTemplates/master/database-connection-properties-template.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "accessKeyProperties": {
						"value": "[parameters('databaseConnectionProperties')]"
                    }
                }
            },
            "dependsOn": ["[concat(parameters('functionAppName'),'storage')]"]
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat(parameters('functionAppName'),'-eventHub-connection-properties')]",
            "type": "Microsoft.Resources/deployments",
            "condition": "[not(empty(parameters('eventHubConnectionProperties')))]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/kdunikowski/ARMTemplates/master/eventhub-connection-properties.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "eventHubConnectionProperties": {
						"value": "[parameters('eventHubConnectionProperties')]"
                    }
                }
            },
            "dependsOn": ["[concat(parameters('functionAppName'),'storage')]"]
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat(parameters('functionAppName'),'-storage-connection-properties')]",
            "type": "Microsoft.Resources/deployments",
            "condition": "[not(empty(parameters('storageConnectionProperties')))]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/kdunikowski/ARMTemplates/master/storage-connection-properties-template.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "accessKeyProperties": {
						"value": "[parameters('storageConnectionProperties')]"
                    }
                }
            },
            "dependsOn": ["[concat(parameters('functionAppName'),'storage')]"]
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat(parameters('functionAppName'),'-service-bus-properties')]",
            "type": "Microsoft.Resources/deployments",
            "condition": "[not(empty(parameters('serviceBusConnectionProperties')))]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/kdunikowski/ARMTemplates/master/service-bus-properties-template.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "serviceBusNamespaceName": {
						"value": "[parameters('serviceBusConnectionProperties').serviceBusNamespaceName]"
                    },
                     "serviceBusQueue": {
						"value": "[parameters('serviceBusConnectionProperties').serviceBusQueue]"
                    },
                     "serviceBusQueuePolicyName": {
						"value": "[parameters('serviceBusConnectionProperties').serviceBusQueuePolicyName]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "sku": {
                "Tier": "[first(split(parameters('sku'), ' '))]",
                "Name": "[first(skip(split(parameters('sku'), ' '), 1))]"
            },
            "apiVersion": "2015-08-01",
            "name": "[parameters('hostingPlanName')]",
            "location": "[resourceGroup().location]",
            "properties": {
            "name": "[parameters('hostingPlanName')]"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "name": "[parameters('functionAppName')]",
            "kind": "functionapp",
            "apiVersion": "2020-06-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "[concat('hidden-related:', '/subscriptions/', subscription().subscriptionId,'/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "empty"
            },
            "properties": {
                "siteConfig": {
                    "alwaysOn": "[not(equals(parameters('sku'), 'Dynamic Y1'))]",
                    "appSettings": "[concat(reference(concat(parameters('functionAppName'),'-properties')).outputs.properties.value, if(not(empty(parameters('databaseConnectionProperties'))), reference(concat(parameters('functionAppName'),'-database-connection-properties')).outputs.properties.value, variables('empty')), if(not(empty(parameters('storageConnectionProperties'))), reference(concat(parameters('functionAppName'),'-storage-connection-properties')).outputs.properties.value, variables('empty')),
                    if(not(empty(parameters('serviceBusConnectionProperties'))), reference(concat(parameters('functionAppName'),'-service-bus-properties')).outputs.properties.value, variables('empty')),if(not(empty(parameters('eventHubConnectionProperties'))), reference(concat(parameters('functionAppName'),'-eventhub-connection-properties')).outputs.properties.value, variables('empty')),parameters('tsiConnectionProperties'))]"
                },
                "name": "[parameters('functionAppName')]",
                "serverFarmId": "[concat('/subscriptions/', subscription().subscriptionId,'/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                "hostingEnvironment": ""
            },
            "dependsOn": [
                "[concat(parameters('functionAppName'),'storage')]",
                "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                "[resourceId('microsoft.insights/components/', parameters('functionAppName'))]",
                "[concat(parameters('functionAppName'),'-database-connection-properties')]",
                "[concat(parameters('functionAppName'),'-service-bus-properties')]"
            ]
        },
        {
            "apiVersion": "2018-05-01-preview",
            "name": "[parameters('functionAppName')]",
            "type": "microsoft.insights/components",
            "location": "[parameters('appInsightLocation')]",
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('functionAppName'))]": "Resource"
            },
            "properties": {
                "ApplicationId": "[parameters('functionAppName')]",
                "Request_Source": "IbizaDevOpsExtensionCreate"
            }
        },
	    {
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2020-06-01",
            "name": "[concat(parameters('functionAppName'),'/', parameters('functions')[copyIndex()].name)]",
		    "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
            ],
            "properties": {
                "config": {
                    "bindings": [
                        {
                        "name": "req",
                        "webHookType": "genericJson",
                        "direction": "in",
                        "type": "[parameters('functions')[copyIndex()].inTriggerType]"
                        },
                        {
                        "name": "res",
                        "direction": "out",
                        "type": "[parameters('functions')[copyIndex()].outTriggerType]"
                        }
                    ]
                }
            },
            "copy": {
				"name": "functionsCopy",
				"count": "[length(parameters('functions'))]",
                "mode": "serial"
			}
        }
    ]
  }